/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stack.and.queue;

import stack.and.queue.Generics.Animal;
import stack.and.queue.Generics.AnimalShelter;

public class App {


    public static void main(String[] args) throws Exception {

      Stack stack=new Stack();
      stack.push("T");
      stack.push("A");
      stack.push("R");
      stack.push("I");
      stack.push("Q");
      try {
        System.out.println(stack.peek());
      }catch (Exception exception){
        exception.printStackTrace();
      }

      System.out.println(stack.isEmpty());
      try {
        System.out.println(stack.pop());
      }catch (Exception exception){
        exception.printStackTrace();
      }
      try {
        System.out.println(stack.peek());
      }catch (Exception exception){
        exception.printStackTrace();
      }
      System.out.println("===================================================================");
      System.out.println("===================================================================");
      Queue queue=new Queue();
      queue.enqueue("T");
      queue.enqueue("A");
      queue.enqueue("R");
      queue.enqueue("I");
      queue.enqueue("Q");
      try {
        System.out.println(queue.peek());
      }catch (Exception exception){
        exception.printStackTrace();
      }System.out.println(queue.isEmpty());
      try {
        System.out.println(queue.dequeue());
      }catch (Exception exception){
        exception.printStackTrace();
      }try {
        System.out.println(queue.peek());
      }catch (Exception exception){
        exception.printStackTrace();
      }

      System.out.println("================================================================================");
      System.out.println("================================================================================");

      PseudoQueue pseudoQueue = new PseudoQueue();
      pseudoQueue.enqueue("A");
      pseudoQueue.enqueue("B");
      pseudoQueue.enqueue("C");
      pseudoQueue.enqueue("D");
      pseudoQueue.enqueue("E");
      System.out.println(pseudoQueue.stack1.peek());
      System.out.println(pseudoQueue.dequeue());
      System.out.println(pseudoQueue.stack1.peek());

      System.out.println("================================================================================");
      System.out.println("================================================================================");
      AnimalShelter animalShelter = new AnimalShelter();
      animalShelter.enqueue(new Animal("cat"));
      animalShelter.enqueue(new Animal("cat"));
      animalShelter.enqueue(new Animal("cat"));
      animalShelter.enqueue(new Animal("cat"));
      animalShelter.enqueue(new Animal("dog"));
      animalShelter.enqueue(new Animal("dog"));
      animalShelter.enqueue(new Animal("dog"));
      animalShelter.enqueue(new Animal("dog"));
      System.out.println(animalShelter.getDogs().getSize());
      System.out.println(animalShelter.getCats().getSize());
      System.out.println(animalShelter.dequeue("dog"));
      System.out.println(animalShelter.dequeue("cat"));
      System.out.println(animalShelter.getDogs().getSize());
      System.out.println(animalShelter.getCats().getSize());

    }
}
